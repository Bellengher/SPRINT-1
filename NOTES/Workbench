



+CREAR LA TABLA CREDIT CARD:
CREATE TABLE IF NOT EXISTS credit_card (
	id VARCHAR(20) PRIMARY KEY,
	iban VARCHAR(60),
	pan INT(50),
	pin INT(4),
	cvv INT(4),
	expiring_date DATE ,
	FOREIGN KEY (id) REFERENCES transaction(credit_card_id)  
);

*PROCESO PARA CAMBIAR DE FORMATO DATE EN VISUAL STUDI CODE:
EDIT/REPLACE (USE REGULAR EXPRESSION)  !!!!
BUSCAR EN VISUAL STUDIO CODE: \b\d{1,2}/\d{1,2}/\d{2}\b
REMPLAZAR A: STR_TO_DATE('$0', '%m/%d/%y')

EDIT/REPLACE (WITHOUT REGULAR EXPRESSION) !!!!
REPLACE: 'STR ---> STR
REPLACE: )')  ---> ))



-------------------------------------------------------------------------------------------------------------------------------------------------------------

*MANIPULAR BASE DE DATOS/ TABLAS

***MOSTRAR***
SHOW TABLES;						# Muestra las tablas de una base de datos
SHOW COLUMNS FROM nombre_de_tabla;			# Muestra las columnas de la tabla indicada
SHOW CREATE TABLE nombre_de_tabla;			# Muestra el codigo para crear la tabla por si quisieramos clonarla
SHOW INDEXES FROM base_de_datos.nombre_de_tabla;	# MUESTRA INDEX DE LA TABLA
SHOW COLUMNS FROM base_de_datos.nombre_de_tabla;	# MUESTRA COLUMNAS DE LA TABLA

***CREAR TABLA***
CREATE TABLE IF NOT EXISTS nombre_de_tabla (		# Crear tabla
	campo1 DATATYPE PRIMARY KEY,			# Nombrar campo y datatype
	campo2 DATATYPE, 
);

***INDEXAR TABLA***
CREATE INDEX nombre_indice ON nombre_tabla (columna1, columna2, ...);

CREATE INDEX idx_credit_card_id ON transaction(credit_card_id);

***AGREGAR UNA FOREIGN KEY***
ALTER TABLE tabla_de_hechos
ADD foreign key (columna_tabla_de_hechos) REFERENCES tabla_de_medidas(columna_tabla_de_medidas);


***MODIFICAR TABLAS***
RENAME TABLE nombre_de_tabla_anterior TO nuevo_nombre_de_tabla;			# Renombra la tabla indicada
DROP TABLE nombre_de_tabla;							# Elimina una tabla


***MODIFICAR COLUMNAS***
ALTER TABLE nombre_de_tabla ADD nombre_de_columna INT NOT NULL; 		# Crea una nueva columna
ALTER TABLE nombre_de_tabla CHANGE  nombre_original nuevo_nombre INT NOT NULL; 	# Cambia nombre del columna
ALTER TABLE nombre_de_tabla DROP COLUMN nombre_de_columna ;			# Elimina una columna

***MANIPULAR BASES DE DATOS***
SHOW DATABASES; 				# MUESTRA LAS BASES DE DATOS
CREATE DATABASE nombre_de_base_de_datos ;  	# CREA UNA BASE DE DATOS
DROP DATABASE nombre_de_base_de_datos ;		# ELIMINA BASE DE DATOS

***WILDCARDS***
SER AUTOCOMMIT = OFF;		# Crea un punto de retorno antes de los cambios.
ROLLBACK;			# Vuelve al punto de retorno


***PROCESOS***
**CREAR PROCESP**
DELIMITER //

CREATE PROCEDURE nombre_de_proceso()
BEGIN
    SELECT * FROM nombre_de_tabla;	# Aqu√≠ se indica lo que queremos que haga el proceso
END //

DELIMITER ;

CALL nombre_de_proceso;			# Llama al proceso
DROP PROCEDURE nombre_de_proceso;	# Elimina el proceso




    
    
